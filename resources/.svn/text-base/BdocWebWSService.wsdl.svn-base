<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!-- Generated by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is JAX-WS RI 2.1.6 in JDK 6. -->
<definitions targetNamespace="http://service.bdoc.com/" name="BdocWebWSService" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://service.bdoc.com/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <documentation>
  This web service allows you to perform three operations:
   - Get Repository.
   - Get information about a template.
   - Assemble a template.
   - Validate an input text validation action.
   - Validate an input data validation action.
  </documentation>
  <types>
    <xsd:schema>
      <xsd:import namespace="http://service.bdoc.com/" schemaLocation="BdocWebWSService_schema1.xsd"/>
    </xsd:schema>
  </types>
  <message name="getRepository">
 	<documentation>
			<summary>Requests for a list of Domain objects that make up the repository.</summary>
    </documentation>
    <part name="parameters" element="tns:getRepository"/>
  </message>
  <message name="getRepositoryResponse">
  	<documentation>
			<summary>
			Represents a list of Domain objects.
			A Domain object contains the domain's name, a description and a list of templates objects.
			A Template object contains the template's name, a description, a list of keywords and a list of system keywords.
			</summary>
    </documentation>
    <part name="parameters" element="tns:getRepositoryResponse"/>
  </message>
  <message name="BDocWebException">
    <part name="fault" element="tns:BDocWebException"/>
  </message>
  <message name="BDocNetworkException">
    <part name="fault" element="tns:BDocNetworkException"/>
  </message>
  <message name="getTemplate">
  	<documentation>
			<summary>Requests for a TemplateInfos object by passing the domain's name and a template's name.</summary>
    </documentation>
    <part name="parameters" element="tns:getTemplate"/>
  </message>
  <message name="getTemplateResponse">
  	<documentation>
			<summary>
			Represents a TemplateInfos object which contains the templateInfos's name, a description, a list of keywords, a list of system keywords,
			a domain's name, a type of templateInfos, a data stream name, a html preview, a list of technical entities, a list of node Items and a list of translate descriptions.
			</summary>
    </documentation>
    <part name="parameters" element="tns:getTemplateResponse"/>
  </message>
  <message name="BDocResourceException">
    <part name="fault" element="tns:BDocResourceException"/>
  </message>
  <message name="generation">
  	<documentation>
			<summary>
			Requests for an InteractionResult object by passing the domain's name, a template's name, 
			a session id, a list of technical item data, a data stream content, a list of optional items and a list of generation options.
			</summary>
    </documentation>
    <part name="parameters" element="tns:generation"/>
  </message>
  <message name="generationResponse">
  	<documentation>
			<summary>
			Represents an InteractionResult object which contains a session id and a struct content.
			An InteractionResult object may be:
			- a DocumentInfo object which contains a list of documents, a content type, an error message and an error code.
			- or an InteractionForm object which contains a template's name, a text name, a form id, a current Html, a Html Before, a Html After, a header, a title and a description.
			An InteractionForm object may be:
			- an InputDataForm object which contains a list of data fields.
			- or an InputTextForm object.
			</summary>
    </documentation>
    <part name="parameters" element="tns:generationResponse"/>
  </message>
  <message name="validateTextForm">
 	<documentation>
			<summary>
			Requests for an InteractionResult object by passing a session id, an html Content, a template's name, 
			 a text's name, a form Id and a validation type.
			</summary>
    </documentation>
    <part name="parameters" element="tns:validateTextForm"/>
  </message>
  <message name="validateTextFormResponse">
  	<documentation>
			<summary>
			Represents an InteractionResult object which contains a session id and a struct content.
			An InteractionResult object may be:
			- a DocumentInfo object which contains a list of documents, a content type, an error message and an error code.
			- or an InteractionForm object which contains a template's name, a text name, a form id, a current Html, a Html Before, a Html After, a header, a title and a description.
			An InteractionForm object may be:
			- an InputDataForm object which contains a list of data fields.
			- or an InputTextForm object.
			</summary>
    </documentation>
    <part name="parameters" element="tns:validateTextFormResponse"/>
  </message>
  <message name="validateDataForm">
  	<documentation>
			<summary>
			Requests for an InteractionResult object by passing a session id, a form Id, a list of fields and a validation type.
			</summary>
    </documentation>
    <part name="parameters" element="tns:validateDataForm"/>
  </message>
  <message name="validateDataFormResponse">
  	<documentation>
			<summary>
			Represents an InteractionResult object which contains a session id and a struct content.
			An InteractionResult object may be:
			- a DocumentInfo object which contains a list of documents, a content type, an error message and an error code.
			- or an InteractionForm object which contains a template's name, a text name, a form id, a current Html, a Html Before, a Html After, a header, a title and a description.
			An InteractionForm object may be:
			- an InputDataForm object which contains a list of data fields.
			- or an InputTextForm object.
			</summary>
    </documentation>
    <part name="parameters" element="tns:validateDataFormResponse"/>
  </message>
  <portType name="BdocWebWS">
    <operation name="getRepository">
      <input message="tns:getRepository"/>
      <output message="tns:getRepositoryResponse"/>
      <fault message="tns:BDocWebException" name="BDocWebException"/>
      <fault message="tns:BDocNetworkException" name="BDocNetworkException"/>
    </operation>
    <operation name="getTemplate">
      <input message="tns:getTemplate"/>
      <output message="tns:getTemplateResponse"/>
      <fault message="tns:BDocWebException" name="BDocWebException"/>
      <fault message="tns:BDocNetworkException" name="BDocNetworkException"/>
      <fault message="tns:BDocResourceException" name="BDocResourceException"/>
    </operation>
    <operation name="generation">
      <input message="tns:generation"/>
      <output message="tns:generationResponse"/>
      <fault message="tns:BDocWebException" name="BDocWebException"/>
      <fault message="tns:BDocNetworkException" name="BDocNetworkException"/>
      <fault message="tns:BDocResourceException" name="BDocResourceException"/>
    </operation>
    <operation name="validateTextForm">
      <input message="tns:validateTextForm"/>
      <output message="tns:validateTextFormResponse"/>
      <fault message="tns:BDocWebException" name="BDocWebException"/>
      <fault message="tns:BDocNetworkException" name="BDocNetworkException"/>
    </operation>
    <operation name="validateDataForm">
      <input message="tns:validateDataForm"/>
      <output message="tns:validateDataFormResponse"/>
      <fault message="tns:BDocWebException" name="BDocWebException"/>
      <fault message="tns:BDocNetworkException" name="BDocNetworkException"/>
    </operation>
  </portType>
  <binding name="BdocWebWSPortBinding" type="tns:BdocWebWS">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <operation name="getRepository">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="BDocWebException">
        <soap:fault name="BDocWebException" use="literal"/>
      </fault>
      <fault name="BDocNetworkException">
        <soap:fault name="BDocNetworkException" use="literal"/>
      </fault>
    </operation>
    <operation name="getTemplate">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="BDocWebException">
        <soap:fault name="BDocWebException" use="literal"/>
      </fault>
      <fault name="BDocNetworkException">
        <soap:fault name="BDocNetworkException" use="literal"/>
      </fault>
      <fault name="BDocResourceException">
        <soap:fault name="BDocResourceException" use="literal"/>
      </fault>
    </operation>
    <operation name="generation">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="BDocWebException">
        <soap:fault name="BDocWebException" use="literal"/>
      </fault>
      <fault name="BDocNetworkException">
        <soap:fault name="BDocNetworkException" use="literal"/>
      </fault>
      <fault name="BDocResourceException">
        <soap:fault name="BDocResourceException" use="literal"/>
      </fault>
    </operation>
    <operation name="validateTextForm">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="BDocWebException">
        <soap:fault name="BDocWebException" use="literal"/>
      </fault>
      <fault name="BDocNetworkException">
        <soap:fault name="BDocNetworkException" use="literal"/>
      </fault>
    </operation>
    <operation name="validateDataForm">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="BDocWebException">
        <soap:fault name="BDocWebException" use="literal"/>
      </fault>
      <fault name="BDocNetworkException">
        <soap:fault name="BDocNetworkException" use="literal"/>
      </fault>
    </operation>
  </binding>
  <service name="BdocWebWSService">
    <port name="BdocWebWSPort" binding="tns:BdocWebWSPortBinding">
      <soap:address location="http://localhost:8080/BdocWebServices-5.0/BdocWebWS"/>
    </port>
  </service>
</definitions>